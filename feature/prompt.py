
class Prompter:
    @staticmethod
    def character_map(context: str):
        return ("반드시 아래의 ### 읽은 페이지 내용을 기반으로 인물에 대한 관계도를 만들어. \n"
        "아래의 읽은 페이지 내용을 기반으로 핵심적인 주인공 하나를 파악하고, 반드시 파악한 주인공을 기반으로 등장하는 인물들의 관계를 표현해줘.\n"
        "아래의 json 형식으로 대답하고, 반드시 모든 등장 인물의 이름은 바꾸지 않아야 해.\n"
        "주인공과 등장 인물은 ','로 구분하여 []형태로 표현해.\n"
        "관계는 모든 인물에 대하여 인물1, 인물2, 관계로 표현해.\n\n"
        "- 주인공 : {} \n"
        "- 등장 인물 {} \n"
        "- 관계 : {\"first\":인물1, \"second\":인물2, \"relationship\":관계} \n"
        "- 사건 : {} \n\n"
        "### 읽은 페이지 내용 : " + context + " \n\n"
        "답변을 진행한 후, 주인공의 이름을 확인하고, 모든 등장 인물들의 이름이 바뀌었는지 다시 한번 확인해줘. \n"
        "차례차례 잘 생각해보자. json 형식으로 잘 대답하면 $200의 팁을 줄게.")

    @staticmethod
    def diary_img(context: str):
        return (
            "너의 유일한 역할은 그림 책에 들어가는 그림을 만드는 것이다. \n"
            "'" + context + "' 라는 문장을 보고 떠오르는 삽화를 생성해."
        )

    @staticmethod
    def diary_img_with_book(book_name: str, context: str):
        return (
            "너의 유일한 역할은 " + book_name + " 그림 책에 들어가는 그림을 만드는 것이다. \n"
            "'" + context + "' 라는 문장을 보고 떠오르는 삽화를 생성해."
        )


    @staticmethod
    def summary_img(img_style: str, keywords: str):
        return (
            img_style + " 스타일, " + keywords
        )

    @staticmethod
    def summary_keyword_plot(context: str):
        return (
            "반드시 아래의 ### 읽은 페이지 내용을 아래의 지시사항 기반으로 4개의 문장으로 요약해. \n"
            "# 지시사항 1 : ### 읽은 페이지 내용을 기반으로 핵심적인 주인공 하나를 파악 \n"
            "# 지시사항 2 : 핵심적인 주인공이라 생각하고 ### 읽은 페이지 내용을 4개의 문장으로 요약 \n"
            "# 지사사항 3 : 4개의 문장 별로 아래의 json 형태를 가지는 json array 형태로 답변 \n\n"
            "   {"
            "       \"id\": 문장 번호,"
            "       \"sentence\": 요약 문장,"
            "       \"keyword\": 키워드"
            "   }"
            "### 읽은 페이지 내용 : " + context + " \n\n"
            "차례차례 잘 생각해보자. json 형식으로 잘 대답하면 $200의 팁을 줄게."
        )

    @staticmethod
    def kaba_wiki(user_query: str, context: str):
        return (
            "반드시 아래의 ### 읽은 페이지 내용을 기반으로 들어온 ### 질문에 답변해. \n\n"
            "### 질문 : " + user_query + " \n\n"
            "### 읽은 페이지 내용 : " + context + " \n\n"
            "차례차례 잘 생각해보자. json 형식으로 잘 대답하면 $200의 팁을 줄게."
        )




# 프롬프트 정의
prompt_dict = {
    # 핵심적인, 하나를 단어 추가
    "relation_map": (
        "반드시 아래의 ### 읽은 페이지 내용을 기반으로 인물에 대한 관계도를 만들어. \n"
        "아래의 읽은 페이지 내용을 기반으로 핵심적인 주인공 하나를 파악하고, 반드시 파악한 주인공을 기반으로 등장하는 인물들의 관계를 표현해줘.\n"
        "아래의 json 형식으로 대답하고, 반드시 모든 등장 인물의 이름은 바꾸지 않아야 해.\n"
        "주인공과 등장 인물은 ','로 구분하여 []형태로 표현해.\n"
        "관계는 모든 인물에 대하여 인물1, 인물2, 관계로 표현해.\n\n"
        "- 주인공 : {} \n"
        "- 등장 인물 {} \n"
        "- 관계 : {인물 1, 인물 2, 관계} \n"
        "- 사건 : {} \n\n"
        "### 읽은 페이지 내용 : {context} \n\n"
        "답변을 진행한 후, 주인공의 이름을 확인하고, 모든 등장 인물들의 이름이 바뀌었는지 다시 한번 확인해줘. \n"
        "차례차례 잘 생각해보자. json 형식으로 잘 대답하면 $200의 팁을 줄게."
    ),

    # 그림 일기 생성 (책 제목 추가)
    "diary_img_with_book": (
        "너의 유일한 역할은 {book_name} 그림 책에 들어가는 그림을 만드는 것이다. \n"
        "'{fav_sent}' 라는 문장을 보고 떠오르는 삽화를 생성해."
    ),

    # 그림 일기 생성 (책 제목 제거)
    "diary_img": (
        "너의 유일한 역할은 그림 책에 들어가는 그림을 만드는 것이다. \n"
        "'{fav_sent}' 라는 문장을 보고 떠오르는 삽화를 생성해."
    ),

    # 줄거리 요약 + 키워드 생성
    "summary_keyword_plot": (
        "반드시 아래의 ### 읽은 페이지 내용을 아래의 지시사항 기반으로 4개의 문장으로 요약해. \n"
        "# 지시사항 1 : ### 읽은 페이지 내용을 기반으로 핵심적인 주인공 하나를 파악 \n"
        "# 지시사항 2 : 핵심적인 주인공이라 생각하고 ### 읽은 페이지 내용을 4개의 문장으로 요약 \n"
        "# 지사사항 3 : 4개의 문장 별로 아래의 json 형태를 가지는 json array 형태로 답변 \n\n"
        "   {"
        "       \"id\": 문장 번호,"
        "       \"sentence\": 요약 문장,"
        "       \"keyword\": 키워드"
        "   }"
        "### 읽은 페이지 내용 : {context} \n\n"
        "차례차례 잘 생각해보자. json 형식으로 잘 대답하면 $200의 팁을 줄게."
    ),

    # 줄거리 키워드에 따른 그림 생성
    "summary_img": (
        "{img_style} 스타일, {keywords}"
    ),

    # KABA WIKI
    "kaba_wiki": (
        "반드시 아래의 ### 읽은 페이지 내용을 기반으로 들어온 ### 질문에 답변해. \n\n"
        "### 질문 : {user_query} \n\n"
        "### 읽은 페이지 내용 : {context} \n\n"
        "차례차례 잘 생각해보자. json 형식으로 잘 대답하면 $200의 팁을 줄게."
    )
}